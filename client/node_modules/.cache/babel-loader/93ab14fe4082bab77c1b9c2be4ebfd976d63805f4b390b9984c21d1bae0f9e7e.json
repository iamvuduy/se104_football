{"ast":null,"code":"var _jsxFileName = \"F:\\\\testGemini\\\\client\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.baseURL = 'http://localhost:3001';\nconst AuthContext = /*#__PURE__*/createContext(null);\n\n// Helper to parse JWT\nconst parseJwt = token => {\n  try {\n    return JSON.parse(atob(token.split('.')[1]));\n  } catch (e) {\n    return null;\n  }\n};\n\n// Function to check initial auth state synchronously\nconst getInitialAuthState = () => {\n  const token = localStorage.getItem('token');\n  if (!token) {\n    return {\n      token: null,\n      user: null,\n      isAuthenticated: false\n    };\n  }\n  const decodedUser = parseJwt(token);\n  if (decodedUser && decodedUser.exp * 1000 > Date.now()) {\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    return {\n      token,\n      user: decodedUser,\n      isAuthenticated: true\n    };\n  } else {\n    localStorage.removeItem('token'); // Clean up expired token\n    return {\n      token: null,\n      user: null,\n      isAuthenticated: false\n    };\n  }\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const initialState = getInitialAuthState();\n  const [token, setToken] = useState(initialState.token);\n  const [user, setUser] = useState(initialState.user);\n  const [isAuthenticated, setIsAuthenticated] = useState(initialState.isAuthenticated);\n  const login = async (username, password) => {\n    try {\n      const response = await axios.post('/api/auth/login', {\n        username,\n        password\n      });\n      const {\n        token: newToken\n      } = response.data;\n      localStorage.setItem('token', newToken);\n      axios.defaults.headers.common['Authorization'] = `Bearer ${newToken}`;\n      const decodedUser = parseJwt(newToken);\n      setToken(newToken);\n      setUser(decodedUser);\n      setIsAuthenticated(true);\n      return {\n        success: true\n      };\n    } catch (error) {\n      let message = 'Login failed. Please try again.';\n      if (error.response && error.response.data && error.response.data.message) {\n        message = error.response.data.message;\n      }\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    delete axios.defaults.headers.common['Authorization'];\n    setToken(null);\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n  const value = {\n    isAuthenticated,\n    user,\n    login,\n    logout,\n    token\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 12\n  }, this);\n};\n_s(AuthProvider, \"B9BvNHy/iI4SR9AHcr4dSCGr45w=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","jsxDEV","_jsxDEV","defaults","baseURL","AuthContext","parseJwt","token","JSON","parse","atob","split","e","getInitialAuthState","localStorage","getItem","user","isAuthenticated","decodedUser","exp","Date","now","headers","common","removeItem","AuthProvider","children","_s","initialState","setToken","setUser","setIsAuthenticated","login","username","password","response","post","newToken","data","setItem","success","error","message","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["F:/testGemini/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'http://localhost:3001';\n\nconst AuthContext = createContext(null);\n\n// Helper to parse JWT\nconst parseJwt = (token) => {\n    try {\n        return JSON.parse(atob(token.split('.')[1]));\n    } catch (e) {\n        return null;\n    }\n};\n\n// Function to check initial auth state synchronously\nconst getInitialAuthState = () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n        return { token: null, user: null, isAuthenticated: false };\n    }\n\n    const decodedUser = parseJwt(token);\n    if (decodedUser && decodedUser.exp * 1000 > Date.now()) {\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n        return { token, user: decodedUser, isAuthenticated: true };\n    } else {\n        localStorage.removeItem('token'); // Clean up expired token\n        return { token: null, user: null, isAuthenticated: false };\n    }\n};\n\nexport const AuthProvider = ({ children }) => {\n    const initialState = getInitialAuthState();\n    const [token, setToken] = useState(initialState.token);\n    const [user, setUser] = useState(initialState.user);\n    const [isAuthenticated, setIsAuthenticated] = useState(initialState.isAuthenticated);\n\n    const login = async (username, password) => {\n        try {\n            const response = await axios.post('/api/auth/login', { username, password });\n            const { token: newToken } = response.data;\n            localStorage.setItem('token', newToken);\n            axios.defaults.headers.common['Authorization'] = `Bearer ${newToken}`;\n            const decodedUser = parseJwt(newToken);\n            setToken(newToken);\n            setUser(decodedUser);\n            setIsAuthenticated(true);\n            return { success: true };\n        } catch (error) {\n            let message = 'Login failed. Please try again.';\n            if (error.response && error.response.data && error.response.data.message) {\n                message = error.response.data.message;\n            }\n            return { success: false, message };\n        }\n    };\n\n    const logout = () => {\n        localStorage.removeItem('token');\n        delete axios.defaults.headers.common['Authorization'];\n        setToken(null);\n        setUser(null);\n        setIsAuthenticated(false);\n    };\n\n    const value = {\n        isAuthenticated,\n        user,\n        login,\n        logout,\n        token\n    };\n\n    return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport const useAuth = () => {\n    return useContext(AuthContext);\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}