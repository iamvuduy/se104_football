{"ast":null,"code":"var _jsxFileName = \"F:\\\\testGemini\\\\client\\\\src\\\\context\\\\ToastProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useCallback, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToastContext = /*#__PURE__*/createContext(null);\nexport const useToast = () => {\n  _s();\n  const context = useContext(ToastContext);\n  if (!context) {\n    throw new Error(\"useToast must be used within a ToastProvider\");\n  }\n  return context;\n};\n\n// Single Toast Component\n_s(useToast, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nconst Toast = ({\n  message,\n  type,\n  onClose\n}) => {\n  _s2();\n  const [isExiting, setIsExiting] = useState(false);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setIsExiting(true);\n      // Wait for animation to finish before removing the toast\n      setTimeout(onClose, 400);\n    }, 4000); // Auto-dismiss after 4 seconds\n\n    return () => clearTimeout(timer);\n  }, [onClose]);\n  const SuccessIcon = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: \"white\",\n    strokeWidth: \"3\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    children: /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M20 6L9 17l-5-5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n  const ErrorIcon = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: \"white\",\n    strokeWidth: \"3\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    children: [/*#__PURE__*/_jsxDEV(\"line\", {\n      x1: \"18\",\n      y1: \"6\",\n      x2: \"6\",\n      y2: \"18\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n      x1: \"6\",\n      y1: \"6\",\n      x2: \"18\",\n      y2: \"18\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `toast ${type} ${isExiting ? 'exiting' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toast-icon\",\n      children: type === 'success' ? /*#__PURE__*/_jsxDEV(SuccessIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 39\n      }, this) : /*#__PURE__*/_jsxDEV(ErrorIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 57\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toast-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n// Toast Provider\n_s2(Toast, \"vtNV9DxZsgDt7gK06brhGivvR+0=\");\n_c = Toast;\nexport const ToastProvider = ({\n  children\n}) => {\n  _s3();\n  const [toasts, setToasts] = useState([]);\n  const addToast = useCallback((type, message) => {\n    const id = Date.now() + Math.random();\n    setToasts(prevToasts => [...prevToasts, {\n      id,\n      type,\n      message\n    }]);\n  }, []);\n  const removeToast = useCallback(id => {\n    setToasts(prevToasts => prevToasts.filter(toast => toast.id !== id));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ToastContext.Provider, {\n    value: {\n      addToast\n    },\n    children: [children, /*#__PURE__*/ReactDOM.createPortal(/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toast-container\",\n      children: toasts.map(toast => /*#__PURE__*/_jsxDEV(Toast, {\n        type: toast.type,\n        message: toast.message,\n        onClose: () => removeToast(toast.id)\n      }, toast.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this), document.body)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n_s3(ToastProvider, \"tmfEFb4ovUrwhRRzkxJL7vA7ka4=\");\n_c2 = ToastProvider;\nvar _c, _c2;\n$RefreshReg$(_c, \"Toast\");\n$RefreshReg$(_c2, \"ToastProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useCallback","useEffect","ReactDOM","jsxDEV","_jsxDEV","ToastContext","useToast","_s","context","Error","Toast","message","type","onClose","_s2","isExiting","setIsExiting","timer","setTimeout","clearTimeout","SuccessIcon","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","children","d","fileName","_jsxFileName","lineNumber","columnNumber","ErrorIcon","x1","y1","x2","y2","className","_c","ToastProvider","_s3","toasts","setToasts","addToast","id","Date","now","Math","random","prevToasts","removeToast","filter","toast","Provider","value","createPortal","map","document","body","_c2","$RefreshReg$"],"sources":["F:/testGemini/client/src/context/ToastProvider.js"],"sourcesContent":["import React, { createContext, useState, useContext, useCallback, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst ToastContext = createContext(null);\n\nexport const useToast = () => {\n    const context = useContext(ToastContext);\n    if (!context) {\n        throw new Error(\"useToast must be used within a ToastProvider\");\n    }\n    return context;\n};\n\n// Single Toast Component\nconst Toast = ({ message, type, onClose }) => {\n    const [isExiting, setIsExiting] = useState(false);\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            setIsExiting(true);\n            // Wait for animation to finish before removing the toast\n            setTimeout(onClose, 400);\n        }, 4000); // Auto-dismiss after 4 seconds\n\n        return () => clearTimeout(timer);\n    }, [onClose]);\n\n    const SuccessIcon = () => (\n        <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"white\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n            <path d=\"M20 6L9 17l-5-5\" />\n        </svg>\n    );\n\n    const ErrorIcon = () => (\n        <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"white\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n            <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\" />\n            <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\" />\n        </svg>\n    );\n\n    return (\n        <div className={`toast ${type} ${isExiting ? 'exiting' : ''}`}>\n            <div className=\"toast-icon\">\n                {type === 'success' ? <SuccessIcon /> : <ErrorIcon />}\n            </div>\n            <div className=\"toast-message\">{message}</div>\n        </div>\n    );\n};\n\n// Toast Provider\nexport const ToastProvider = ({ children }) => {\n    const [toasts, setToasts] = useState([]);\n\n    const addToast = useCallback((type, message) => {\n        const id = Date.now() + Math.random();\n        setToasts(prevToasts => [...prevToasts, { id, type, message }]);\n    }, []);\n\n    const removeToast = useCallback((id) => {\n        setToasts(prevToasts => prevToasts.filter(toast => toast.id !== id));\n    }, []);\n\n    return (\n        <ToastContext.Provider value={{ addToast }}>\n            {children}\n            {ReactDOM.createPortal(\n                <div className=\"toast-container\">\n                    {toasts.map(toast => (\n                        <Toast\n                            key={toast.id}\n                            type={toast.type}\n                            message={toast.message}\n                            onClose={() => removeToast(toast.id)}\n                        />\n                    ))}\n                </div>,\n                document.body\n            )}\n        </ToastContext.Provider>\n    );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}